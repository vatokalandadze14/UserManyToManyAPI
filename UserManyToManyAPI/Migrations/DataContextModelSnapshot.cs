// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManyToManyAPI.Data;

#nullable disable

namespace UserManyToManyAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserManyToManyAPI.Models.Premission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Roleid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Roleid");

                    b.ToTable("Premission");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.RolePremissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PremissionIdid")
                        .HasColumnType("int");

                    b.Property<int>("RoleIdid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PremissionIdid");

                    b.HasIndex("RoleIdid");

                    b.ToTable("RolePremissions");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleIdid")
                        .HasColumnType("int");

                    b.Property<int>("UserIdid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleIdid");

                    b.HasIndex("UserIdid");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.Premission", b =>
                {
                    b.HasOne("UserManyToManyAPI.Models.Role", null)
                        .WithMany("Premissions")
                        .HasForeignKey("Roleid");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.Role", b =>
                {
                    b.HasOne("UserManyToManyAPI.Models.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.RolePremissions", b =>
                {
                    b.HasOne("UserManyToManyAPI.Models.Premission", "PremissionId")
                        .WithMany()
                        .HasForeignKey("PremissionIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManyToManyAPI.Models.Role", "RoleId")
                        .WithMany()
                        .HasForeignKey("RoleIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremissionId");

                    b.Navigation("RoleId");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.UserRoles", b =>
                {
                    b.HasOne("UserManyToManyAPI.Models.Role", "RoleId")
                        .WithMany()
                        .HasForeignKey("RoleIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManyToManyAPI.Models.User", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.Role", b =>
                {
                    b.Navigation("Premissions");
                });

            modelBuilder.Entity("UserManyToManyAPI.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
